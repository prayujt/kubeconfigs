apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubedeploy-sa
  namespace: kubedeploy
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: global-deployment-role
rules:
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: global-deployment-rolebinding
subjects:
- kind: ServiceAccount
  name: kubedeploy-sa
  namespace: kubedeploy
roleRef:
  kind: ClusterRole
  name: global-deployment-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubedeploy
  namespace: kubedeploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubedeploy
  template:
    metadata:
      labels:
        app: kubedeploy
    spec:
      serviceAccountName: kubedeploy-sa
      containers:
      - name: kubedeploy-container
        image: docker.prayujt.com/kubedeploy
        ports:
        - containerPort: 8080
        env:
        - name: DEPLOY_TOKEN
          valueFrom:
            secretKeyRef:
              name: kubedeploy-secret
              key: DEPLOY_TOKEN
---
apiVersion: v1
kind: Service
metadata:
  name: kubedeploy
  namespace: kubedeploy
spec:
  selector:
    app: kubedeploy
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
